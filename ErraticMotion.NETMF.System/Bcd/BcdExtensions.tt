<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Bcd 
{
    /// <summary>
    /// <see cref="Byte"/> extensions
    /// </summary>
    internal static class BcdExtensions 
	{
        /// <summary>
        /// 
        /// </summary>
        /// <param name="item"></param>
        /// <returns></returns>
        public static byte FromBcd(this byte item) 
		{
		    // This is a generated member, do not change directly but alter the BcdExtensions.tt text template file
            switch (item) 
			{
<#
				this.PushIndent("\t\t\t\t");
                for(int i = 0; i < 100; i++) 
				{
                    this.WriteLine("case 0x{0}:", i);
					this.PushIndent("\t");
					this.WriteLine("return {0}; // 0x{1}", i, ((byte)i).ToString("X2"));
					this.PopIndent();
                };
				this.PopIndent();
#>
                default:
                    throw new ArgumentOutOfRangeException("item", "item value could not be converted to a byte.");
            }
        }
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="item"></param>
        /// <returns></returns>
        public static byte FromBcdAcceptTrailingF(this byte item)
        {
		    // This is a generated member, do not change directly but alter the BcdExtensions.tt text template file
            switch (item) 
			{
<#
				this.PushIndent("\t\t\t\t");
                for (int i = 0; i < 10; i++)
                {
                    this.WriteLine("case 0x{0}F:", i);
                    this.PushIndent("\t");
                    this.WriteLine("return {0}; // 0x{1}", i, ((byte)i).ToString("X2"));
                    this.PopIndent();
                }
				this.PopIndent();
#>
                default:
					return FromBcd(item);
            }
        }
    }
}

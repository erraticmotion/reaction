<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ import namespace="System" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behaviour and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Extensions
{
    /// <summary>
    /// 
    /// </summary>
    internal partial class LiteralStringToByte
    {
        /// <summary>
        /// Converts a string to its literal byte value
        /// </summary>
        /// <param name="item">The string to convert</param>
        /// <returns></returns>
        /// <exception cref="ArgumentOutOfRangeException">The string must be 2 characters in length</exception>
        private static byte ToByte(string item) 
        {
            if (item.IsNullorEmpty()) 
            {
                return 0x00;
            }
            
            if (item.Length != 2) 
            {
                throw new ArgumentOutOfRangeException("item", "item length was not 2.");
            }
            
            switch (item) 
            {
<#
                this.PushIndent("\t\t\t\t");
                for(int i = 0; i < 256; i++) {
                    this.WriteLine("case \"{0}\":", ((byte)i).ToString("X2"));
                    this.PushIndent("\t");
                    this.WriteLine("return 0x{0, 00};", ((byte)i).ToString("X2"));
                    this.PopIndent();
                };
                this.PopIndent();
#>
                default:
                    throw new ArgumentOutOfRangeException("item", "item value cannot be greater than 255.");
            }
        }
    
    }
}

